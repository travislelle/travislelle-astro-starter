---
import Layout from "../layouts/Layout.astro";
---
<Layout title="Fun Zone — Minigame">
  <div class="card">
    <h1>Minigame: Neon Snake</h1>
    <p class="muted">Use arrow keys (or WASD). Eat the glow dots. Don’t hit the walls or yourself.</p>
    <canvas id="game" width="640" height="400"></canvas>
    <p class="muted">Score: <span id="score">0</span></p>
  </div>
  <script client:load>
    const c = document.getElementById('game');
    const ctx = c.getContext('2d');
    const scale = 20;
    const cols = Math.floor(c.width / scale);
    const rows = Math.floor(c.height / scale);

    let snake = [{x:10, y:10}];
    let dir = {x:1, y:0};
    let food = {x: Math.floor(Math.random()*cols), y: Math.floor(Math.random()*rows)};
    let score = 0;
    let alive = true;

    function drawCell(x,y,color){
      ctx.fillStyle = color;
      ctx.fillRect(x*scale+1, y*scale+1, scale-2, scale-2);
    }

    function spawnFood(){
      food = {x: Math.floor(Math.random()*cols), y: Math.floor(Math.random()*rows)};
    }

    function step(){
      if(!alive) return;
      const head = {x: snake[0].x + dir.x, y: snake[0].y + dir.y};
      // wall collision
      if(head.x<0||head.y<0||head.x>=cols||head.y>=rows){ alive=false; }
      // self collision
      if(snake.some((s,i)=> i>0 && s.x===head.x && s.y===head.y)){ alive=false; }
      if(!alive){ render(true); return; }

      snake.unshift(head);
      // eat
      if(head.x===food.x && head.y===food.y){
        score+=10;
        document.getElementById('score').textContent = score;
        spawnFood();
      } else {
        snake.pop();
      }
      render();
    }

    function render(gameOver=false){
      ctx.clearRect(0,0,c.width,c.height);
      // background glow
      const g = ctx.createLinearGradient(0,0,c.width,c.height);
      g.addColorStop(0,'#07111a');
      g.addColorStop(1,'#0c1422');
      ctx.fillStyle=g; ctx.fillRect(0,0,c.width,c.height);
      // grid
      ctx.strokeStyle='rgba(255,255,255,0.05)';
      for(let x=0;x<=cols;x++){ ctx.beginPath(); ctx.moveTo(x*scale,0); ctx.lineTo(x*scale,c.height); ctx.stroke(); }
      for(let y=0;y<=rows;y++){ ctx.beginPath(); ctx.moveTo(0,y*scale); ctx.lineTo(c.width,y*scale); ctx.stroke(); }

      // food
      drawCell(food.x, food.y, '#7fff9f');
      // snake
      snake.forEach((s,i)=> drawCell(s.x, s.y, i===0 ? '#5ee3ff' : 'rgba(94,227,255,0.7)'));

      if(gameOver){
        ctx.fillStyle='rgba(0,0,0,0.6)';
        ctx.fillRect(0,0,c.width,c.height);
        ctx.fillStyle='#e7ebf4';
        ctx.font='20px system-ui, sans-serif';
        ctx.textAlign='center';
        ctx.fillText('Game over — press R to restart', c.width/2, c.height/2);
      }
    }

    window.addEventListener('keydown', (e)=>{
      const k = e.key.toLowerCase();
      if(k==='arrowup'||k==='w'){ if(dir.y===0) dir={x:0,y:-1}; }
      if(k==='arrowdown'||k==='s'){ if(dir.y===0) dir={x:0,y:1}; }
      if(k==='arrowleft'||k==='a'){ if(dir.x===0) dir={x:-1,y:0}; }
      if(k==='arrowright'||k==='d'){ if(dir.x===0) dir={x:1,y:0}; }
      if(k==='r'){ snake=[{x:10,y:10}]; dir={x:1,y:0}; score=0; alive=true; document.getElementById('score').textContent=0; }
    });

    render();
    setInterval(step, 110);
  </script>
</Layout>
